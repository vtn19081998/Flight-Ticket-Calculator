import os
from PyQt6.QtCore import Qt, QEvent, QTimer
from PyQt6.QtGui import QIcon, QKeySequence
from PyQt6.QtWidgets import (
    QDialog, QVBoxLayout, QLabel, QPlainTextEdit, QPushButton,
    QLineEdit, QMessageBox, QApplication, QHBoxLayout
)

class SafeTextEdit(QPlainTextEdit):
    """Custom QTextEdit ƒë·ªÉ gi·ªõi h·∫°n k√≠ch th∆∞·ªõc vƒÉn b·∫£n."""
    def __init__(self, parent=None):
        super().__init__(parent)
        self.max_text_length = 10000  # Gi·ªõi h·∫°n ƒë·ªô d√†i vƒÉn b·∫£n
        self.setMinimumHeight(300)  # ƒê·∫∑t chi·ªÅu cao t·ªëi thi·ªÉu 300px cho √¥ nh·∫≠p n·ªôi dung
        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)  # T·∫Øt thanh cu·ªôn ngang
        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)  # Hi·ªÉn th·ªã thanh cu·ªôn d·ªçc khi c·∫ßn

    def insertFromMimeData(self, source):
        """X·ª≠ l√Ω d·ªØ li·ªáu t·ª´ clipboard (ch·ªâ vƒÉn b·∫£n)."""
        try:
            if source.hasText():
                current_length = len(self.toPlainText())
                text_to_insert = source.text()[:self.max_text_length - current_length]
                if len(text_to_insert) < len(source.text()):
                    QMessageBox.warning(self, "C·∫£nh b√°o", "N·ªôi dung d√°n ƒë√£ b·ªã c·∫Øt ng·∫Øn do v∆∞·ª£t qu√° gi·ªõi h·∫°n 10,000 k√Ω t·ª±!")
                self.insertPlainText(text_to_insert)
            else:
                QMessageBox.warning(self, "C·∫£nh b√°o", "Ch·ªâ h·ªó tr·ª£ d√°n vƒÉn b·∫£n!")
        except Exception as e:
            QMessageBox.critical(self, "L·ªói", "Kh√¥ng th·ªÉ d√°n d·ªØ li·ªáu: ƒê·ªãnh d·∫°ng kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£!")

    def keyPressEvent(self, event):
        """Gi·ªõi h·∫°n ƒë·ªô d√†i vƒÉn b·∫£n khi nh·∫≠p t·ª´ b√†n ph√≠m."""
        if len(self.toPlainText()) >= self.max_text_length and event.key() not in (
            Qt.Key.Key_Backspace, Qt.Key.Key_Delete, Qt.Key.Key_Left, Qt.Key.Key_Right,
            Qt.Key.Key_Up, Qt.Key.Key_Down, Qt.Key.Key_Control
        ):
            return
        super().keyPressEvent(event)
        # C·∫≠p nh·∫≠t chi·ªÅu cao c·ª≠a s·ªï khi nh·∫≠p li·ªáu
        if self.parent():
            self.parent().adjust_window_height()

class EditMenuDialog(QDialog):
    def __init__(self, parent=None, menu_name="", menu_content="", images=None, title="Ch·ªânh s·ª≠a ghi ch√∫"):
        super().__init__(parent)
        self.setWindowTitle(title)
        parent_width = parent.width() if parent else 550
        self.setMinimumWidth(parent_width)
        self.min_height = 300
        self.max_height = 800
        self.initUI(menu_name, menu_content)
        # Tr√¨ ho√£n vi·ªác ƒëi·ªÅu ch·ªânh chi·ªÅu cao v√† v·ªã tr√≠ ƒë·ªÉ ƒë·∫£m b·∫£o giao di·ªán ƒë√£ render
        QTimer.singleShot(0, lambda: self.position_dialog(parent))
        QTimer.singleShot(0, self.adjust_window_height)

    def position_dialog(self, parent):
        """ƒê·∫∑t v·ªã tr√≠ c·ªßa dialog: cƒÉn gi·ªØa theo chi·ªÅu ngang, cƒÉn tr√™n theo chi·ªÅu d·ªçc so v·ªõi parent."""
        try:
            if parent:
                parent_rect = parent.geometry()
                dialog_rect = self.geometry()
                # CƒÉn gi·ªØa theo chi·ªÅu ngang
                dialog_x = parent_rect.x() + (parent_rect.width() - dialog_rect.width()) // 2
                # CƒÉn tr√™n theo chi·ªÅu d·ªçc, c·ªông th√™m offset 30px
                dialog_y = parent_rect.y() + 30
                self.move(dialog_x, dialog_y)
        except Exception:
            pass  # B·ªè qua n·∫øu c√≥ l·ªói

    def initUI(self, menu_name, menu_content):
        layout = QVBoxLayout()

        self.name_input = QLineEdit()
        self.name_input.setPlaceholderText("Nh·∫≠p t√™n ghi ch√∫ (t·ªëi ƒëa 60 k√Ω t·ª±)...")
        self.name_input.setText(menu_name)
        self.name_input.setMaxLength(60)  # Gi·ªõi h·∫°n ƒë·ªô d√†i t√™n menu
        self.name_input.setStyleSheet("border: 1px solid #CCCCCC; border-radius: 5px; padding: 3px;")
        self.name_input.textChanged.connect(self.adjust_window_height)  # C·∫≠p nh·∫≠t chi·ªÅu cao khi nh·∫≠p t√™n
        layout.addWidget(QLabel("T√™n ghi ch√∫:"))
        layout.addWidget(self.name_input)
        layout.addSpacing(10)  # Th√™m kho·∫£ng c√°ch

        self.content_input = SafeTextEdit(self)  # Truy·ªÅn self l√†m parent ƒë·ªÉ g·ªçi adjust_window_height
        self.content_input.setPlaceholderText("Nh·∫≠p n·ªôi dung (h·ªó tr·ª£ k√Ω t·ª± Unicode v√† xu·ªëng d√≤ng)...")
        self.content_input.setStyleSheet("""
            QPlainTextEdit {
                border: 1px solid #CCCCCC; 
                border-radius: 5px; 
                padding: 5px;
            }
            QPlainTextEdit QScrollBar:vertical {
                border: none;
                background: #F0F0F0;
                width: 10px;
                margin: 0px 0px 0px 0px;
                border-radius: 5px;
            }
            QPlainTextEdit QScrollBar::handle:vertical {
                background: #4CAF50;
                min-height: 20px;
                border-radius: 5px;
            }
            QPlainTextEdit QScrollBar::handle:vertical:hover {
                background: #66BB6A;
            }
            QPlainTextEdit QScrollBar::handle:vertical:pressed {
                background: #388E3C;
            }
            QPlainTextEdit QScrollBar::add-line:vertical {
                height: 0px;
                subcontrol-position: bottom;
                subcontrol-origin: margin;
            }
            QPlainTextEdit QScrollBar::sub-line:vertical {
                height: 0px;
                subcontrol-position: top;
                subcontrol-origin: margin;
            }
            QPlainTextEdit QScrollBar::add-page:vertical, QPlainTextEdit QScrollBar::sub-page:vertical {
                background: none;
            }
        """)
        try:
            self.set_content(menu_content)
        except Exception:
            self.content_input.setPlainText("L·ªói t·∫£i n·ªôi dung, vui l√≤ng th·ª≠ l·∫°i.")
        layout.addWidget(QLabel("N·ªôi dung (vƒÉn b·∫£n):"))
        layout.addWidget(self.content_input)
        layout.addSpacing(10)  # Th√™m kho·∫£ng c√°ch

        button_layout = QHBoxLayout()
        save_button = QPushButton("üíæ L∆∞u")
        save_button.setStyleSheet("""
            background-color: #4CAF50; 
            color: white; 
            border-radius: 5px; 
            padding: 5px;
            border: 1px solid #388E3C;
            font-weight: bold;
        """)
        save_button.setToolTip("L∆∞u ghi ch√∫ (Ctrl+S)")
        save_button.clicked.connect(self.accept)
        save_button.setShortcut(QKeySequence("Ctrl+S"))  # Ph√≠m t·∫Øt Ctrl+S

        cancel_button = QPushButton("‚ùå H·ªßy")
        cancel_button.setStyleSheet("""
            background-color: #F44336; 
            color: white; 
            border-radius: 5px; 
            padding: 5px;
            border: 1px solid #D32F2F;
            font-weight: bold;
        """)
        cancel_button.setToolTip("H·ªßy (Esc)")
        cancel_button.clicked.connect(self.reject)

        button_layout.addWidget(save_button)
        button_layout.addWidget(cancel_button)
        layout.addLayout(button_layout)

        self.setLayout(layout)

    def set_content(self, content):
        """ƒê·∫∑t n·ªôi dung plain text cho QPlainTextEdit."""
        try:
            self.content_input.setPlainText(content)
            QTimer.singleShot(0, self.adjust_window_height)
        except Exception:
            raise

    def adjust_window_height(self):
        """ƒêi·ªÅu ch·ªânh chi·ªÅu cao c·ª≠a s·ªï d·ª±a tr√™n n·ªôi dung."""
        try:
            # T√≠nh chi·ªÅu cao c√°c th√†nh ph·∫ßn
            name_height = self.name_input.sizeHint().height() + 30  # Ch·ª´a kho·∫£ng tr·ªëng cho label v√† margin

            # T√≠nh chi·ªÅu cao n·ªôi dung d·ª±a tr√™n s·ªë d√≤ng v√† k√≠ch th∆∞·ªõc font
            content_doc = self.content_input.document()
            font_metrics = self.content_input.fontMetrics()
            line_count = content_doc.lineCount()
            line_height = font_metrics.lineSpacing()
            content_height = line_count * line_height + 20  # Th√™m padding nh·ªè

            button_height = 60  # ∆Ø·ªõc t√≠nh chi·ªÅu cao n√∫t v√† layout
            spacing = 40  # T·ªïng kho·∫£ng c√°ch gi·ªØa c√°c th√†nh ph·∫ßn (bao g·ªìm c√°c addSpacing)

            # ƒê·∫£m b·∫£o content_height ph√π h·ª£p ƒë·ªÉ total_height ƒë·∫°t t·ªëi thi·ªÉu 300px
            min_content_height = self.min_height - (name_height + button_height + spacing)
            content_height = max(content_height, min_content_height)

            # T√≠nh t·ªïng chi·ªÅu cao
            total_height = name_height + content_height + button_height + spacing
            total_height = max(self.min_height, min(total_height, self.max_height))

            # N·∫øu n·ªôi dung d√†i h∆°n max_height, gi·ªõi h·∫°n chi·ªÅu cao c·ªßa QTextEdit v√† hi·ªÉn th·ªã thanh cu·ªôn
            max_content_height = self.max_height - (name_height + button_height + spacing)
            self.content_input.setFixedHeight(min(content_height, max_content_height))

            self.setFixedHeight(total_height)
        except Exception:
            self.setFixedHeight(self.min_height)  # M·∫∑c ƒë·ªãnh v·ªÅ chi·ªÅu cao t·ªëi thi·ªÉu n·∫øu c√≥ l·ªói
    def get_data(self):
        """L·∫•y d·ªØ li·ªáu t·ª´ dialog."""
        try:
            menu_name = self.name_input.text().strip()
            if not menu_name:
                QMessageBox.warning(self, "C·∫£nh b√°o", "T√™n ghi ch√∫ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!")
                return "", ""
            if len(menu_name) > 60:
                QMessageBox.warning(self, "C·∫£nh b√°o", "T√™n ghi ch√∫ kh√¥ng ƒë∆∞·ª£c d√†i qu√° 60 k√Ω t·ª±!")
                return "", ""

            content = self.content_input.toPlainText().strip()
            if not content:
                QMessageBox.warning(self, "C·∫£nh b√°o", "N·ªôi dung ghi ch√∫ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!")
                return "", ""
            if len(content) > self.content_input.max_text_length:
                content = content[:self.content_input.max_text_length]
            return menu_name, content
        except Exception:
            QMessageBox.critical(self, "L·ªói", "Kh√¥ng th·ªÉ l∆∞u d·ªØ li·ªáu: D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!")
            return "", ""